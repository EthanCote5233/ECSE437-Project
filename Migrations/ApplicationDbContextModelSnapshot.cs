// <auto-generated />
using KannotEven.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KannotEven.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KannotEven.Models.Ingredient", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("Ingredient");

                    b.HasData(
                        new
                        {
                            Name = "I0"
                        },
                        new
                        {
                            Name = "I1"
                        },
                        new
                        {
                            Name = "I2"
                        },
                        new
                        {
                            Name = "I3"
                        },
                        new
                        {
                            Name = "I4"
                        },
                        new
                        {
                            Name = "I5"
                        },
                        new
                        {
                            Name = "I6"
                        },
                        new
                        {
                            Name = "I7"
                        },
                        new
                        {
                            Name = "I8"
                        });
                });

            modelBuilder.Entity("KannotEven.Models.Recipe", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.ToTable("Recipe");

                    b.HasData(
                        new
                        {
                            Name = "R0",
                            URL = "www.test0.com"
                        },
                        new
                        {
                            Name = "R1",
                            URL = "www.test1.com"
                        },
                        new
                        {
                            Name = "R2",
                            URL = "www.test2.com"
                        });
                });

            modelBuilder.Entity("KannotEven.Models.Recipe_Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IngredientName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RecipeName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IngredientName");

                    b.HasIndex("RecipeName");

                    b.ToTable("Recipes_Ingredient");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            IngredientName = "I0",
                            RecipeName = "R0"
                        },
                        new
                        {
                            Id = 3,
                            IngredientName = "I1",
                            RecipeName = "R0"
                        },
                        new
                        {
                            Id = 4,
                            IngredientName = "I2",
                            RecipeName = "R0"
                        },
                        new
                        {
                            Id = 5,
                            IngredientName = "I3",
                            RecipeName = "R1"
                        },
                        new
                        {
                            Id = 6,
                            IngredientName = "I4",
                            RecipeName = "R1"
                        },
                        new
                        {
                            Id = 7,
                            IngredientName = "I5",
                            RecipeName = "R1"
                        },
                        new
                        {
                            Id = 8,
                            IngredientName = "I6",
                            RecipeName = "R2"
                        },
                        new
                        {
                            Id = 9,
                            IngredientName = "I7",
                            RecipeName = "R2"
                        },
                        new
                        {
                            Id = 10,
                            IngredientName = "I8",
                            RecipeName = "R2"
                        });
                });

            modelBuilder.Entity("KannotEven.Models.Recipe_Ingredient", b =>
                {
                    b.HasOne("KannotEven.Models.Ingredient", "Ingredient")
                        .WithMany("Recipe_Ingredients")
                        .HasForeignKey("IngredientName");

                    b.HasOne("KannotEven.Models.Recipe", "Recipe")
                        .WithMany("Recipe_Ingredients")
                        .HasForeignKey("RecipeName");
                });
#pragma warning restore 612, 618
        }
    }
}
